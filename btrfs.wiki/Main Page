Btrfs is a modern copy on write (CoW) filesystem for Linux aimed at implementing advanced features while also focusing on fault tolerance, repair and easy administration. Jointly developed at [[Contributors|multiple companies]], Btrfs is licensed under the GPL and open for contribution from anyone.
Not too many companies have said that they are using Btrfs in production, but we welcome those who can say so on the [[Production_Users|production users]] page.

== Stability status ==

'''For a feature status and stability please refer to the [[Status]] page.''' The filesystem [[On-disk_Format|disk format]] is stable; this means it is not expected to change unless there are very strong reasons to do so. If there is a format change, filesystems which implement the previous disk format will continue to be mountable and usable by newer kernels.

The Btrfs code base is under heavy development. Not only is every effort being made to ensure that it remains stable and fast but to make it more so with each and every commit. This rapid pace of development means that the filesystem improves ''noticeably'' with every new Linux release so it's ''highly'' recommended that users run the most modern kernel possible.

For benchmarks, it's recommended to test the latest stable Linux version, and not any older, as well as the latest Linux development versions. Also, it's recommended to test the various [[mount options]] such as different compression options.

As with all software, newly added features may need a few releases to stabilize.

If you find any behavior you suspect to be caused by a bug, performance issues, or have any questions about using Btrfs, please email the [[Btrfs mailing list]] (no subscription required). Please report bugs on [[Problem_FAQ#How_do_I_report_bugs_and_issues.3F|Bugzilla]].

== Features ==

Linux has a wealth of filesystems from which to choose, but we are facing a number of challenges with scaling to the large storage subsystems that are becoming common in today's data centers. Filesystems need to scale in their ability to address and manage large storage, and also in their ability to detect, repair and tolerate errors in the data stored on disk.

=== Major Features Currently Implemented ===
* Extent based file storage
* 2^64 byte == 16 EiB maximum file size (practical limit is 8 EiB due to Linux VFS)
* Space-efficient packing of small files
* Space-efficient indexed directories
* Dynamic inode allocation
* Writable snapshots, read-only snapshots
* Subvolumes (separate internal filesystem roots)
* Checksums on data and metadata (crc32c, xxhash, sha256, blake2b)
* [[Compression]] (zlib, LZO, ZSTD), heuristics
* Integrated [[Multiple_Device_Support|multiple device support]]
** File Striping
** File Mirroring
** File Striping+Mirroring
** Single and Dual Parity implementations (experimental, not production-ready)
* SSD (flash storage) awareness (TRIM/Discard for reporting free blocks for reuse) and optimizations (e.g. avoiding unnecessary seek optimizations, sending writes in clusters, even if they are from unrelated files. This results in larger write operations and faster write throughput)
* Efficient [[Incremental_Backup|incremental backup]]
* Background scrub process for finding and repairing errors of files with redundant copies
* Online filesystem defragmentation
* [[btrfsck|Offline filesystem check]]
* In-place [[Conversion_from_Ext3|conversion]] of existing ext2/3/4 and reiserfs file systems
* [[Seed-device|Seed devices]]. Create a (readonly) filesystem that acts as a template to seed other Btrfs filesystems. The original filesystem and devices are included as a readonly starting point for the new filesystem. Using copy on write, all modifications are stored on different devices; the original is unchanged.
* Subvolume-aware [[quota support]]
* Send/receive of subvolume changes
** Efficient incremental filesystem mirroring
* Batch, or out-of-band [[deduplication]] (happens after writes, not during)
* Swapfile support
* [[Tree-checker]] for extra robustness

=== Features by kernel version ===
As part of the changelog you can also review

* [[Changelog#By_feature|features by kernel version]]

=== Features Currently in Development or Planned for Future Implementation ===

* Online filesystem check
* Object-level mirroring and striping
* In-band deduplication (happens during writes)
* Hot data tracking and moving to faster devices (or provided on the generic VFS layer)
* SMR (zoned block device) support
* DAX/persistent memory support
* The file/directory -level encryption support (fscrypt)

== News and Changelog ==

''' btrfs-progs v5.3 (Oct 2019) '''

* mkfs:
** new option to specify checksum algorithm (only crc32c)
** fix xattr enumeration
** dump-tree: BFS (breadth-first) traversal now default
** libbtrfsutil: remove stale BTRFS_DEV_REPLACE_ITEM_STATE_x defines
** ci: add support for gitlab
* other:
** preparatory work for more checksum algorithms
** docs update
** switch to docbook5 backend for asciidoc
** fix build on uClibc due to missing backtrace()
** lots of printf format fixups

''' linux v5.2.15 (Sep 2019) '''

* '''5.2.15''' fix for regression introduced in 5.2

''' linux v5.3 (Sep 2019) '''

Read about past releases in the [[Changelog]]
* [[Changelog#By_feature|features by kernel version]]
* [[Changelog#By_version_.28linux_kernel.29|kernel changes]]
* [[Changelog#By_version_.28btrfs-progs.29|btrfs-progs]]

== Documentation ==

=== Guides and usage information ===

* [[Getting started]] — first steps, distributions with btrfs support
** [[Manpage/btrfs(5)#MOUNT_OPTIONS|Mount options]]
* [[FAQ]] — About the btrfs project and filesystem
* [[UseCases]] — Recipes for how to do stuff with btrfs
* [[SysadminGuide]] — A more in-depth guide to btrfs's concepts and a bit of its internals, to answer all those "but what ''is'' a subvolume?" kind of questions.
* [[Using Btrfs with Multiple Devices|Multiple devices]] – A guide to the RAID features of Btrfs
* [[Conversion_from_Ext3|Conversion from Ext3 and Ext4]] or reiserfs
* [[Problem FAQ]] — Commonly-encountered problems and solutions.
** [[Gotchas]] — lists known bugs and issues, but not necessarily solutions.

=== External Btrfs Documentation / Guides ===

Links to Btrfs documentation of various Linux distributions:

* "[https://docs.oracle.com/cd/E37670_01/E37355/html/ol_btrfs.html The Btrfs File System]" chapter in the [https://docs.oracle.com/cd/E37670_01/E37355/html/index.html Oracle Linux 6 Administrator's Solutions Guide]
* Oracle Linux [https://wikis.oracle.com/display/oraclelinux/Hands-on+lab+-+Storage+Management+with+Btrfs Hands-on lab - Storage Management with Btrfs]
* [https://www.suse.com/documentation/sles11/stor_admin/data/sec_filesystems_major.html Major File Systems in Linux] chapter in the [https://www.suse.com/documentation/sles11/stor_admin/data/bookinfo.html SLES 11 Storage Administration Guide]
* [https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Storage_Administration_Guide/ch-btrfs.html Btrfs] chapter in the [https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Storage_Administration_Guide/ Red Hat Enterprise Linux 6 Storage Administration Guide]
* [https://help.ubuntu.com/community/btrfs Btrfs Wiki page] on the [https://help.ubuntu.com/community Ubuntu Community Help Wiki]
* [https://wiki.archlinux.org/index.php/Btrfs Btrfs Wiki page] on the [https://wiki.archlinux.org/ Arch Linux Wiki]
* [http://www.funtoo.org/BTRFS_Fun BTRFS Fun Wiki page] on the [http://www.funtoo.org/ Funtoo Wiki]
* [http://marc.merlins.org/perso/btrfs/post_2014-05-21_My-Btrfs-Talk-at-Linuxcon-JP-2014.html Marc MERLIN's Btrfs talk at Linuxcon JP 2014] which gives an overview of Btrfs, best practices, and its more interesting features.

=== Project information/Contact ===

* [[Changelog]] — history of changes in linux kernel wrt btrfs
** [[Changelog#By_feature | features added by release]]
* [[Contributors#Statistics_for_4.x_series|Development statistics]] — contributors, commits, lines
* [[Glossary]]
* Contact information:
** [[Btrfs mailing list]]
** [http://en.wikipedia.org/wiki/Internet_Relay_Chat IRC] on freenode.net in the channel [irc://irc.freenode.net:6667/btrfs #btrfs]
** Reporting bugs:
*** for kernel code see [[Problem_FAQ#How_do_I_report_bugs_and_issues.3F | the Bugzilla FAQ]], quick tip: use product ''File System'' and component ''btrfs''.
*** for btrfs-progs it's either bugzilla or [https://github.com/kdave/btrfs-progs/issues/ github issues]
*** for read-only documentation exported on wiki eg. manual pages as [https://github.com/kdave/btrfs-progs/issues/ github issues]
* [[Project ideas]]
* [[Project_ideas#Cleanup_projects|Cleanup ideas]]
* [[Project_ideas#Userspace_tools_projects|Userspace tools projects]]

=== Manual pages ===

* Manual pages generated from git ([[:Category:Manpage|complete list]]):
** [[Manpage/btrfs|btrfs]] — main administration tool
** [[Manpage/mkfs.btrfs|mkfs.btrfs]] — creating the filesystem
** [[Manpage/btrfs-check|btrfs check]] — repairing file systems
** [[Manpage/btrfs-convert|btrfs-convert]] — tool to convert in-place from ext2/3/4 filesystems to btrfs. For a greater detail of how the algorithm works, please see the [[Conversion from Ext3]] page.

* Original wiki documentation (obsolete, will be removed)
** [[Restore|restore and find-root]] — utilities to find and restore data from an unmountable filesystem

=== Developer documentation ===

* [[Developer's FAQ]] — hints and answers for contributors and developers, general information about patch formatting
* [[Development notes]] — notes, hints, checklists for specific implementation tasks (eg. adding new ioctls)
* [[Code documentation]] — trees, source files, sample code for manipulating trees
* [[Data Structures]] — detailed on-disk data structures
* [[Trees]] — detailed in-tree representation of files and directories

* [[Btrfs design]] — design notes (possibly out of date in places)
* [[Multiple Device Support]] — design notes
* [[ENOSPC]] — Current ENOSPC design issues
* [[Design_notes_on_Send/Receive]] — notes from initial impelentation, protocol V2 updates draft
* [[Qgroups status quo]] - notes on some qgroups observations/pain points

* [[Debugging Btrfs with GDB]]
* [[Writing patch for btrfs]]
* [[Btree_Items]] - Mapping from Btrfs key to item-data
* [[Resolving_Extent_Backrefs]] - How back references are resolved to root owners

* Original COW B-tree: Source code in C that implements the COW B-tree algorithms [https://github.com/orodeh/bt repository]. Written by Ohad Rodeh at IBM Research in 2006, and released under a BSD license. This is a reference implementation, that works in user space.

* Unmerged features
** In-band (write) time deduplication
*** [[User notes on dedupe]] — User/tester notes for using in-band deduplication feature

==== Source code download ====

* [[Btrfs source repositories]]
* [http://git.kernel.org/?p=linux/kernel/git/mason/linux-btrfs.git;a=tree;f=fs/btrfs;hb=HEAD Gitweb source viewer] of the main kernel repository
* [https://git.kernel.org/cgit/linux/kernel/git/kdave/btrfs-progs.git/ Gitweb source viewer] of the userspace tools repository

=== Wiki editing ===

The wiki contributions are welcome! Please create an account and wait for approval (this is a necessary spam protection). You can try to catch some of the wiki admins on [[#Project_information.2FContact|IRC]] and expedite the account creation.

== Articles, presentations, podcasts ==
* '''Video:''' [https://www.youtube.com/watch?v=W3QRWUfBua8 NYLUG Presents: Chris Mason on Btrfs (May 14th 2015)] by Chris Mason at the 192nd meeting of the NYLUG
* '''Video:''' [https://www.youtube.com/watch?v=6DplcPrQjvA Why you should consider using btrfs ... like Google does.] by Marc Merlin at linux.conf.au 2015. [http://marc.merlins.org/linux/talks/Btrfs-LCA2015/ talk slides]
* '''Article:''' [http://arstechnica.com/information-technology/2014/01/bitrot-and-atomic-cows-inside-next-gen-filesystems Bitrot and atomic COWs: Inside “next-gen” filesystems] (ars technica, 2014/01)
* '''Article:''' [https://lwn.net/Articles/579009/ Btrfs: Subvolumes and snapshots] (LWN.net, 2014/01)
* '''Article:''' [https://lwn.net/Articles/577961/ Btrfs: Working with multiple devices] (LWN.net, 2013/12)
* '''Article:''' [http://lwn.net/Articles/577218/ Btrfs: Getting started] (LWN.net, 2013/12)
* '''Article:''' [http://www.zdnet.com/btrfs-hands-on-an-extremely-cool-file-system-7000023734 Btrfs hands on: An extremely cool file system] (ZDNet, 2013/11)
* '''Technical report:''' [http://domino.watson.ibm.com/library/cyberdig.nsf/1e4115aea78b6e7c85256b360066f0d4/9e29fdded06e5de785257c1d005e7e9e!OpenDocument Visualizating Block IO Workloads]. Section six shows a visual comparison of the IO patterns for BTRFS, XFS, and EXT4. Submitted to ACM Transactions on Storage, November 2013.
* '''Paper:''' [http://dl.acm.org/citation.cfm?id=2501623 BTRFS: The Linux B-Tree Filesystem] describing the overall concepts and architecture, appeared in ACM Transactions on Storage, August 2013. Includes a detailed comparison with ZFS. There is a free ACM authorized link, from O. Rodeh's [https://sites.google.com/site/ohadrodehshomepage/research] page. Otherwise, try [http://domino.research.ibm.com/library/cyberdig.nsf/papers/6E1C5B6A1B6EDD9885257A38006B6130/$File/rj10501.pdf IBM Research link]

<!--
== Benchmarking ==
-->


== Historical resources ==

Links to old or obsolete documentation, articles. Kept for historical reasons. Stuff that's more than 3 years old.

=== Articles, presentations, podcasts ===

* '''Video:''' [https://youtu.be/qHalOdCZO9Q btrfs is awesome, except when it isn't] by Richard Brown at openSUSE Conferece 2018 (2018-05-25)
* '''Video:''' [https://youtu.be/-m01x3gHNjg btrfs: The Best Filesystem You've Never Heard Of] by poiupoiu at PhreakNIC 21 (2017-11-3)
* '''Article:''' [http://www.howtoforge.com/a-beginners-guide-to-btrfs A Beginner's Guide To Btrfs] (2012-11-26)
* '''Article:''' [http://www.oracle.com/technetwork/articles/servers-storage-admin/advanced-btrfs-1734952.html How I Use the Advanced Capabilities of Btrfs] by Margaret Bierman with Lenz Grimmer (2012-08-11)
* '''Article:''' [http://www.oracle.com/technetwork/articles/servers-storage-admin/gettingstarted-btrfs-1695246.html How I Got Started with the Btrfs File System for Oracle Linux] by Margaret Bierman with Lenz Grimmer (2012-07-11)
* '''Video:''' [http://video.linux.com/videos/btrfs-filesystem-status-and-new-features Btrfs Filesystem: Status and New Features] by Chris Mason at the 2012 Linux Foundation Collaboration Summit (2012-04-05)
* '''Article''' [http://static.usenix.org/publications/login/2012-02/openpdfs/Bacik.pdf Btrfs - The Swiss Army Knife Of Storage] by Josef Bacik (2012-02)
* '''Video:''' [http://www.youtube.com/watch?v=hxWuaozpe2I I Can't Believe This is Butter! A tour of btrfs] by Avi Miller at linux.conf.au (2012-01-18)
* '''Article:''' [http://lwn.net/Articles/465160/ A btrfs update at LinuxCon Europe] on lwn.net (2011-11-02)
* '''Podcast:''' [http://feedproxy.google.com/~r/OracleLinux/~3/kRqpaCdTlLg/10491325_Btrfs_071311.mp3 Podcast with Chris Mason: Btrfs overview and status update] (2011-07-13)
* '''Video:''' [http://vimeo.com/15325851 The Story So Far] by Josef Bacik at LinuxCon Brazil (2010-08-31)
* '''Article:''' [http://www.linux.com/learn/tutorials/371623-weekend-project-get-started-with-btrfs Linux.com Weekend Project: Get Started with Btrfs] (2010-10-15)
* '''Webcast:''' [https://event.on24.com/eventRegistration/EventLobbyServlet?target=registration.jsp&eventid=233161&sessionid=1&key=D0B1D3285FA444C5745C344A1C859CE0&partnerref=banner&sourcepage=register State of "Btrfs" File System for Linux by Chris Mason] (2010-08-26) [email registration and flash required]
* '''Article:''' [http://lwn.net/Articles/342892/ Valerie Aurora: A short history of btrfs] (2009-07-22)

=== Benchmarks ===
* '''2012-10''' [http://www.ilsistemista.net/index.php/linux-a-unix/36-btrfs-mount-options-and-virtual-machines-an-in-depth-look.html BTRFS, mount options and virtual machines: an in-depth look] (Ilsistemista.net)
* '''2012-06''' [http://www.ilsistemista.net/index.php/linux-a-unix/34-btrfs-ext3-ext4-xfs-and-kvm-virtual-machine-a-host-side-filesystem-comparison.html BTRFS EXT3 EXT4 XFS and KVM virtual machine: a host-side filesystem comparison] (Ilsistemista.net)
* '''2012-06''' [http://www.ilsistemista.net/index.php/linux-a-unix/33-btrfs-vs-ext3-vs-ext4-vs-xfs-performance-on-fedora-17.html BTRFS vs EXT3 vs EXT4 vs XFS performance on Fedora 17] (Ilsistemista.net)
* '''2012-05''' [http://cd34.com/blog/scalability/ext4-xfs-and-btrfs-benchmark-redux/ Ext4, XFS and Btrfs benchmark redux]
* '''2011-12''' [http://btrfs.boxacle.net Btrfs Performance Analysis]
* '''2011-10''' [http://www.ilsistemista.net/index.php/linux-a-unix/21-ext3-ext4-xfs-and-btrfs-filesystems-comparison-on-linux-kernel-300.html EXT3 vs EXT4 vs XFS vs BTRFS - filesystems comparison on Linux kernel 3.0.0] (Ilsistemista.net)
* '''2010''' [http://www.mayrhofer.eu.org/ssd-linux-benchmark SSD Linux benchmarking: Comparing filesystems and encryption method]
* '''2010-11''' [http://www.ilsistemista.net/index.php/linux-a-unix/6-linux-filesystems-benchmarked-ext3-vs-ext4-vs-xfs-vs-btrfs.html EXT3 vs EXT4 vs XFS vs BTRFS linux filesystems benchmark] (Ilsistemista.net)
* '''2010-10''' [http://www.linux-mag.com/id/7876 One Billion Files] Btrfs performs well in comparison to other filesystems, when there are a billion files in the filesystem.
* '''2008-10''' [http://btrfs.boxacle.net Btrfs performance analysis by Steven Pratt and IBM] The benchmarks from IBM demonstrate some bottlenecks we have in the extent recording on large workloads. We're working on fixes for these.