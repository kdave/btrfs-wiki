#!/usr/bin/perl
# replace manpage references with links to local wiki or man7.org
# add category
# drop "Last updated" footer

my $manbase = "http://man7.org/linux/man-pages/man";
my $verbose = 0;

sub man2url($$) {
	my ($name,$section) = @_;
	return "$manbase$section/$name.$section.html";
}

# header

while (<>) {
	# man pages
	my $looping = 1000;
	while ( m{(<tt>(btrfs[a-z_-]*)</tt>(\(\d+\)))}) {
		print STDERR "REPLACED: $1\n" if $verbose;
		s%<tt>(btrfs[a-z_-]*)</tt>(\(\d+\))%[[Manpage/$1|$1$2]]%;
		if (!$looping--) {
			die "FATAL: looping in replacement logic 1, $_\n";
		}
	}
	$looping = 1000;
	while ( m{(\<tt\>((?:mkfs|fsck)\.btrfs)\</tt\>(\(\d+\)))}) {
		print STDERR "REPLACED: $1\n" if $verbose;
		s%<tt>((?:mkfs|fsck)\.btrfs)</tt>(\(\d+\))%[[Manpage/$1|$1$2]]%;
		if (!$looping--) {
			die "FATAL: looping in replacement logic 2, $_\n";
		}
	}
	$looping = 1000;
	while (m{(<tt>([a-z._-]+)</tt>\((\d+)\))}) {
		print STDERR "REPLACED: $1\n" if $verbose;
		my $url=&man2url($2,$3);
		s%<tt>([a-z._-]+)</tt>(\(\d+\))%[$url $1$2]%;
		if (!$looping--) {
			die "FATAL: looping in replacement logic 3, $_\n";
		}
	}
	# no hrules
	next if (/^----/);
	# maybe later
	next if (/Last updated/);
	print;
	# after title warning
	# capture page name for git link
	if (/^=\s*([a-zA-Z0-9_\.-]+)\(/) {
		my $gitname=$1;
		if ($gitname ne '') {
			print "{{GeneratedManpage\n|name=$gitname}}\n";
		} else {
			print "{{GeneratedManpage}}\n";
		}
	}
}
