=btrfs-subvolume(8) manual page=
{{GeneratedManpage
|name=btrfs-subvolume}}

==NAME==
btrfs-subvolume - manage btrfs subvolumes

==SYNOPSIS==

<p><b>btrfs subvolume</b> <em>&lt;subcommand&gt;</em> [<em>&lt;args&gt;</em>]</p>
==DESCRIPTION==

<p><b>btrfs subvolume</b> is used to create/delete/list/show btrfs subvolumes and
snapshots.</p>
==SUBVOLUME AND SNAPSHOT==

<p>A subvolume is a part of filesystem with its own independent
file/directory hierarchy. Subvolumes can share file extents. A snapshot is
also subvolume, but with a given initial content of the original subvolume.</p>
<blockquote><b>Note:</b>
A subvolume in btrfs is not like an LVM logical volume, which is
block-level snapshot while btrfs subvolumes are file extent-based.</blockquote>
<p>A subvolume looks like a normal directory, with some additional operations
described below. Subvolumes can be renamed or moved, nesting subvolumes is not
restricted but has some implications regarding snapshotting.</p>
<p>A subvolume in btrfs can be accessed in two ways:</p>
<ul>
<li>
<p>
like any other directory that is accessible to the user
</p>
</li>
<li>
<p>
like a separately mounted filesystem (options <em>subvol</em> or <em>subvolid</em>)
</p>
</li>
</ul>
<p>In the latter case the parent directory is not visible and accessible. This is
similar to a bind mount, and in fact the subvolume mount does exactly that.</p>
<p>A freshly created filesystem is also a subvolume, called <em>top-level</em>,
internally has an id 5. This subvolume cannot be removed or replaced by another
subvolume. This is also the subvolume that will be mounted by default, unless
the default subvolume has been changed (see subcommand <em>set-default</em>).</p>
<p>A snapshot is a subvolume like any other, with given initial content. By
default, snapshots are created read-write. File modifications in a snapshot
do not affect the files in the original subvolume.</p>
==SUBCOMMAND==

<dl>
<dt>
<b>create</b> [-i <em>&lt;qgroupid&gt;</em>] [&lt;dest&gt;/]<em>&lt;name&gt;</em>
<dd>
<p>
Create a subvolume <em>&lt;name&gt;</em> in <em>&lt;dest&gt;</em>.
</p>
<p>If <em>&lt;dest&gt;</em> is not given, subvolume <em>&lt;name&gt;</em> will be created in the current
directory.</p>
<p><tt>Options</tt></p>
<dl>
<dt>
-i <em>&lt;qgroupid&gt;</em>
<dd>
<p>
Add the newly created subvolume to a qgroup. This option can be given multiple
times.
</p>

</dl>

<dt>
<b>delete</b> [options] <em>&lt;[&lt;subvolume&gt;</em> [<em>&lt;subvolume&gt;</em>&#8230;]]
<dt>
<b>delete</b> -i|--subvolid <em>&lt;subvolid&gt;</em> <em>&lt;path&gt;</em>&gt;
<dd>
<p>
Delete the subvolume(s) from the filesystem.
</p>
<p>If <em>&lt;subvolume&gt;</em> is not a subvolume, btrfs returns an error but continues if
there are more arguments to process.</p>
<p>If --subvolid is used, <em>&lt;path&gt;</em> must point to a btrfs filesystem. See <tt>btrfs
subvolume list</tt> or <tt>btrfs inspect-internal rootid</tt> how to get the subvolume id.</p>
<p>The corresponding directory is removed instantly but the data blocks are
removed later in the background. The command returns immediately. See <tt>btrfs
subvolume sync</tt> how to wait until the subvolume gets completely removed.</p>
<p>The deletion does not involve full transaction commit by default due to
performance reasons.  As a consequence, the subvolume may appear again after a
crash.  Use one of the <em>--commit</em> options to wait until the operation is
safely stored on the device.</p>
<p>The default subvolume (see <b>btrfs subvolume set-default</b>) cannot be deleted and
returns error (EPERM) and this is logged to the system log. A subvolume that&#8217;s
currently involved in send (see <b>btrfs send</b>) also cannot be deleted until the
send is finished. This is also logged in the system log.</p>
<p><tt>Options</tt></p>
<dl>
<dt>
-c|--commit-after
<dd>
<p>
wait for transaction commit at the end of the operation.
</p>

<dt>
-C|--commit-each
<dd>
<p>
wait for transaction commit after deleting each subvolume.
</p>

<dt>
-i|--subvolid <em>&lt;subvolid&gt;</em>
<dd>
<p>
subvolume id to be removed instead of the <em>&lt;path&gt;</em> that should point to the
filesystem with the subvolume
</p>

<dt>
-v|--verbose
<dd>
<p>
(deprecated) alias for global <em>-v</em> option
</p>

</dl>

<dt>
<b>find-new</b> <em>&lt;subvolume&gt;</em> <em>&lt;last_gen&gt;</em>
<dd>
<p>
List the recently modified files in a subvolume, after <em>&lt;last_gen&gt;</em> generation.
</p>

<dt>
<b>get-default</b> <em>&lt;path&gt;</em>
<dd>
<p>
Get the default subvolume of the filesystem <em>&lt;path&gt;</em>.
</p>
<p>The output format is similar to <b>subvolume list</b> command.</p>

<dt>
<b>list</b> [options] [-G [+|-]<em>&lt;value&gt;</em>] [-C [+|-]<em>&lt;value&gt;</em>] [--sort=rootid,gen,ogen,path] <em>&lt;path&gt;</em>
<dd>
<p>
List the subvolumes present in the filesystem <em>&lt;path&gt;</em>.
</p>
<p>For every subvolume the following information is shown by default:</p>
<p>ID <em>&lt;ID&gt;</em> gen <em>&lt;generation&gt;</em> top level <em>&lt;ID&gt;</em> path <em>&lt;path&gt;</em></p>
<p>where ID is subvolume&#8217;s id, gen is an internal counter which is updated
every transaction, top level is the same as parent subvolume&#8217;s id, and
path is the relative path of the subvolume to the top level subvolume.
The subvolume&#8217;s ID may be used by the subvolume set-default command,
or at mount time via the subvolid= option.</p>
<p><tt>Options</tt></p>
<dl>
<dt>
Path filtering
<dd>
<dl>
<dt>
-o
<dd>
<p>
print only subvolumes below specified <em>&lt;path&gt;</em>.
</p>

<dt>
-a
<dd>
<p>
print all the subvolumes in the filesystem and distinguish between
absolute and relative path with respect to the given <em>&lt;path&gt;</em>.
</p>

</dl>

<dt>
Field selection
<dd>
<dl>
<dt>
-p
<dd>
<p>
print the parent ID
(<em>parent</em> here means the subvolume which contains this subvolume).
</p>

<dt>
-c
<dd>
<p>
print the ogeneration of the subvolume, aliases: ogen or origin generation.
</p>

<dt>
-g
<dd>
<p>
print the generation of the subvolume (default).
</p>

<dt>
-u
<dd>
<p>
print the UUID of the subvolume.
</p>

<dt>
-q
<dd>
<p>
print the parent UUID of the subvolume
(<em>parent</em> here means subvolume of which this subvolume is a snapshot).
</p>

<dt>
-R
<dd>
<p>
print the UUID of the sent subvolume, where the subvolume is the result of a receive operation.
</p>

</dl>

<dt>
Type filtering
<dd>
<dl>
<dt>
-s
<dd>
<p>
only snapshot subvolumes in the filesystem will be listed.
</p>

<dt>
-r
<dd>
<p>
only readonly subvolumes in the filesystem will be listed.
</p>

<dt>
-d
<dd>
<p>
list deleted subvolumes that are not yet cleaned.
</p>

</dl>

<dt>
Other
<dd>
<dl>
<dt>
-t
<dd>
<p>
print the result as a table.
</p>

</dl>

<dt>
Sorting
<dd>
<p>
By default the subvolumes will be sorted by subvolume ID ascending.
</p>
<dl>
<dt>
-G [+|-]<em>&lt;value&gt;</em>
<dd>
<p>
list subvolumes in the filesystem that its generation is
&gt;=, &#8656; or = value. '+' means &gt;= value, '-' means &lt;= value, If there is
neither '+' nor '-', it means = value.
</p>

<dt>
-C [+|-]<em>&lt;value&gt;</em>
<dd>
<p>
list subvolumes in the filesystem that its ogeneration is
&gt;=, &lt;= or = value. The usage is the same to <em>-G</em> option.
</p>

<dt>
--sort=rootid,gen,ogen,path
<dd>
<p>
list subvolumes in order by specified items.
you can add '+' or '-' in front of each items, '+' means ascending,
'-' means descending. The default is ascending.
</p>
<p>for --sort you can combine some items together by ',', just like
--sort=+ogen,-gen,path,rootid.</p>

</dl>

</dl>

<dt>
<b>set-default</b> [<em>&lt;subvolume&gt;</em>|<em>&lt;id&gt;</em> <em>&lt;path&gt;</em>]
<dd>
<p>
Set the default subvolume for the (mounted) filesystem.
</p>
<p>Set the default subvolume for the (mounted) filesystem at <em>&lt;path&gt;</em>. This will hide
the top-level subvolume (i.e. the one mounted with <em>subvol=/</em> or <em>subvolid=5</em>).
Takes action on next mount.</p>
<p>There are two ways how to specify the subvolume, by <em>&lt;id&gt;</em> or by the <em>&lt;subvolume&gt;</em>
path.
The id can be obtained from <b>btrfs subvolume list</b>, <b>btrfs subvolume show</b> or
<b>btrfs inspect-internal rootid</b>.</p>

<dt>
<b>show</b> [options] <em>&lt;path&gt;</em>
<dd>
<p>
Show more information about a subvolume (UUIDs, generations, times, flags,
related snapshots).
</p>
<pre>/mnt/btrfs/subvolume
        Name:                   subvolume
        UUID:                   5e076a14-4e42-254d-ac8e-55bebea982d1
        Parent UUID:            -
        Received UUID:          -
        Creation time:          2018-01-01 12:34:56 +0000
        Subvolume ID:           79
        Generation:             2844
        Gen at creation:        2844
        Parent ID:              5
        Top level ID:           5
        Flags:                  -
        Snapshot(s):</pre>
<p><tt>Options</tt></p>
<dl>
<dt>
-r|--rootid <em>&lt;ID&gt;</em>
<dd>
<p>
show details about subvolume with root <em>&lt;ID&gt;</em>, looked up in <em>&lt;path&gt;</em>
</p>

<dt>
-u|--uuid UUID
<dd>
<p>
show details about subvolume with the given <em>&lt;UUID&gt;</em>, looked up in <em>&lt;path&gt;</em>
</p>

</dl>

<dt>
<b>snapshot</b> [-r] [-i <em>&lt;qgroupid&gt;</em>] <em>&lt;source&gt;</em> <em>&lt;dest&gt;</em>|[&lt;dest&gt;/]<em>&lt;name&gt;</em>
<dd>
<p>
Create a snapshot of the subvolume <em>&lt;source&gt;</em> with the
name <em>&lt;name&gt;</em> in the <em>&lt;dest&gt;</em> directory.
</p>
<p>If only <em>&lt;dest&gt;</em> is given, the subvolume will be named the basename of <em>&lt;source&gt;</em>.
If <em>&lt;source&gt;</em> is not a subvolume, btrfs returns an error.</p>
<p><tt>Options</tt></p>
<dl>
<dt>
-r
<dd>
<p>
Make the new snapshot read only.
</p>

<dt>
-i <em>&lt;qgroupid&gt;</em>
<dd>
<p>
Add the newly created subvolume to a qgroup. This option can be given multiple
times.
</p>

</dl>

<dt>
<b>sync</b> <em>&lt;path&gt;</em> [subvolid&#8230;]
<dd>
<p>
Wait until given subvolume(s) are completely removed from the filesystem after
deletion. If no subvolume id is given, wait until all current deletion requests
are completed, but do not wait for subvolumes deleted in the meantime.
</p>
<p><tt>Options</tt></p>
<dl>
<dt>
-s <em>&lt;N&gt;</em>
<dd>
<p>
sleep N seconds between checks (default: 1)
</p>

</dl>

</dl>
==SUBVOLUME FLAGS==

<p>The subvolume flag currently implemented is the <em>ro</em> property. Read-write
subvolumes have that set to <em>false</em>, snapshots as <em>true</em>. In addition to that,
a plain snapshot will also have last change generation and creation generation
equal.</p>
<p>Read-only snapshots are building blocks fo incremental send (see
[[Manpage/btrfs-send|btrfs-send(8)]]) and the whole use case relies on unmodified snapshots where the
relative changes are generated from. Thus, changing the subvolume flags from
read-only to read-write will break the assumptions and may lead to unexpected changes
in the resulting incremental stream.</p>
<p>A snapshot that was created by send/receive will be read-only, with different
last change generation, read-only and with set <em>received_uuid</em> which identifies
the subvolume on the filesystem that produced the stream. The usecase relies
on matching data on both sides. Changing the subvolume to read-write after it
has been received requires to reset the <em>received_uuid</em>. As this is a notable
change and could potentially break the incremental send use case, performing
it by <b>btrfs property set</b> requires force if that is really desired by user.</p>
<blockquote><b>Note:</b>
The safety checks have been implemented in 5.14.2, any subvolumes
previously received (with a valid <em>received_uuid</em>) and read-write status may
exist and could still lead to problems with send/receive. You can use <b>btrfs
subvolume show</b> to identify them. Flipping the flags to read-only and back to
read-write will reset the <em>received_uuid</em> manually.  There may exist a
convenience tool in the future.</blockquote>
==EXAMPLES==

<table frame="void" width="100%" cellpadding="4">
<tr><td style="border-left: 2px solid silver;">
<p>If we want to delete a subvolume called <tt>foo</tt> from a btrfs volume mounted at
<tt>/mnt/bar</tt> we could run the following:</p>
<table border="0" bgcolor="#e8e8e8" width="100%" cellpadding="10"><tr><td><!-- Generator: GNU source-highlight
by Lorenzo Bettini
http://www.lorenzobettini.it
http://www.gnu.org/software/src-highlite -->
<pre><tt>btrfs subvolume delete /mnt/bar/foo</tt></pre></td></tr></table>
</td></tr></table>
<p><b>Example 1. </b>Deleting a subvolume</p>
==EXIT STATUS==

<p><b>btrfs subvolume</b> returns a zero exit status if it succeeds. A non-zero value is
returned in case of failure.</p>
==AVAILABILITY==

<p><b>btrfs</b> is part of btrfs-progs.
Please refer to the btrfs wiki http://btrfs.wiki.kernel.org for
further details.</p>
==SEE ALSO==

<p>[[Manpage/mkfs.btrfs|mkfs.btrfs(8)]],
[http://man7.org/linux/man-pages/man8/mount.8.html mount(8)],
[[Manpage/btrfs-quota|btrfs-quota(8)]],
[[Manpage/btrfs-qgroup|btrfs-qgroup(8)]],
[[Manpage/btrfs-send|btrfs-send(8)]]</p>
[[Category:Manpage]]