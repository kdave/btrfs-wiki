== Stable Packages ==

Official ebuilds are available in Gentoo portage for the btrfs progs/utils.

''(We have phased out the standalone btrfs kernel module package, since Linux kernel sources starting with 2.6.29 contain integrated btrfs.)''

There are ebuilds for the "stable" versions and for the "unstable" version of the btrfs progs in Gentoo.

All "stable" versions but 0.19 are not marked "stable" in the Gentoo tree, so you will need to add the package to /etc/portage/package.keywords (file or dir, whichever you use), whenever you want to use a version other than 0.19. For example, on x86:

 
 sys-fs/btrfs-progs ~x86

The "unstable" version is a live ebuild fetching the "state-of-work" from the [[Btrfs_source_repositories#btrfs-progs Git Repository| official git repository]] each time you compile it. It is masked by the missing keywords option, so you will neet to add the package to /etc/portage/package.keywords (file or dir, whichever you use), whenever you want to use this version.

 
 =sys-fs/btrfs-progs-9999 **
 

In both cases, you are now ready to install:

 
 emerge -av btrfs-progs

''Note that you need to be sure you install the correct version of the utils for your kernel. A warning about this is displayed during install, so check this message to be sure you have installed the right version.''

Then proceed with [[Getting_started#Basic Filesystem Commands| Getting started]].
= Building latest btrfs against a recent kernel with DKMS =

You probably want to build the latest btrfs kernel module with DKMS if:

* You have a very recent kernel. For instance, the dkms procedure does not work with recent kernels, including 2.6.38, because it does not include the btrfs tracepoint header file, which needs to be in the kernel include files for dkms to work. It is probably possible to backport by removing these tracing changes.
* You want to avoid the latest regressions in the upstream kernel
* You want the latest btrfs on a kernel with the latest stability and security updates from your distro's kernel. (cmason's git tree has the latest btrfs code, but it does NOT have any stability or security patches for the rest of the kernel after 2.6.32 was released.)

Many times the latest upstream kernel doesn't have the latest btrfs code, so if you plan on testing and reporting bugs, the latest btrfs from git will make sure you don't report bugs that are already fixed.

* Install dkms and git (most distros already package them)

: Fedora:

 yum install dkms git patch curl

: Debian/*buntu:

: :: Warning: Make sure your version of dpkg has been updated to fix the bug that will cause it to delete files it shouldn't with btrfs and possibly jfs: [http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=575891 #575891 dpkg makes wrong assumption about readdir() and lose metadata files with btrfs] Debian unstable as of 2010-05-17 and Ubuntu 10.04 are known to have a suitably updated dpkg to avoid this issue.

: :: Warning: Ubuntu 10.04 ships with a 2.6.32 kernel, which is reported to become unstable when used with btrfs from git. Strongly consider using a 2.6.34 or later kernel. Later kernel packages are available from http://kernel.ubuntu.com/~kernel-ppa/mainline/, although be aware that those kernels don't receive security updates.

* Clone cmason's git kernel tree (see above for example command and address)
* Change directory to the btrfs directory in your git tree. The commands below will depend on the current directory already set to this location.

 cd &lt;path to cmason's git tree&gt;'''/fs/btrfs'''

* Patch version script (otherwise it will say 2.6.27... which is wrong)

: Once cmason merges this patch this step can be skipped. (the command below will check to see if the patch applies, and then patch. So if it doesn't say a file is patched then this wiki probably needs to be updated.)

 if curl -s https://patchwork.kernel.org/patch/96837/raw/ \
 |patch -p3 --dry-run 2&gt;&amp;1 &gt; /dev/null; then \
 curl -s https://patchwork.kernel.org/patch/96837/raw/ \
 |patch -p3; fi

* Run version script (so you can check dmesg to see which version of btrfs you're running)

: If you look in version.h you should see a line something like: BTRFS_BUILD_VERSION "Btrfs 2010-05-15_12:05:50_-0400"

 sh version.sh

* make dkms.conf file in the btrfs source directory

: Note: If you are not using btrfs as your / filesystem, then you can take out the REMAKE_INITRD line

 PACKAGE_NAME="btrfs"
 PACKAGE_VERSION="git"
 BUILT_MODULE_NAME[0]="btrfs"
 DEST_MODULE_LOCATION[0]="/kernel/fs/btrfs/"
 AUTOINSTALL="yes"
 REMAKE_INITRD="yes"

* Make symlink as needed by dkms

 ln -s &lt;path to cmason's git tree&gt;/fs/btrfs /usr/src/btrfs-git

* Fix dkms initramfs creation in fedora

: Note: You can skip this step if you do not use fedora or if you do not use btrfs as your / filesystem.

: The dkms in fedora doesn't know about dracut, the new initramfs creation tool in fedora. It expects mkinitrd to be present and work. You can pull down the dkms source tree, apply two patches and build a new package to fix this or just apply the patch to your current installation with the command below. The updated package should include this patch once it is released. See [https://bugzilla.redhat.com/show_bug.cgi?id=589890 RH BZ 589890] (the command below will check to see if the patch applies, and then patch. So if it doesn't say a file is patched then this wiki probably needs to be updated.)

 cd /usr/sbin &amp;&amp; if curl -s https://bugzilla.redhat.com/attachment.cgi?id=413062 \
 |patch -p1 -l --dry-run 2&gt;&amp;1 &gt; /dev/null; then \
 curl -s https://bugzilla.redhat.com/attachment.cgi?id=413062 \
 |patch -p1 -l; fi

* Add the new module to be used by dkms

 dkms add -m btrfs -v git

* Build the new module with dkms

 dkms build -m btrfs -v git

 &lt;in progress&gt;

[[Category:UserDoc]]